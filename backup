// import piechart

import React, { PureComponent } from "react";
import {
  PieChart,
  Pie,
  Sector,
  Cell,
  ResponsiveContainer,
  Legend,
} from "recharts";

const data = [
  { name: "CPUs", sales: 80000 },
  { name: "GPUs", sales: 100000 },
  { name: "Motherboards", sales: 60000 },
  { name: "RAM", sales: 40000 },
  { name: "Storage (SSDs/HDDs)", sales: 50000 },
  { name: "Power Supplies", sales: 30000 },
  { name: "Cases", sales: 20000 },
  { name: "Cooling Systems", sales: 15000 },
];

const COLORS = ["#0088FE", "#00C49F", "#FFBB28", "#FF8042"];

const RADIAN = Math.PI / 180;
const renderCustomizedLabel = ({
  cx,
  cy,
  midAngle,
  innerRadius,
  outerRadius,
  percent,
  index,
}) => {
  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;
  const x = cx + radius * Math.cos(-midAngle * RADIAN);
  const y = cy + radius * Math.sin(-midAngle * RADIAN);

  return (
    <text
      x={x}
      y={y}
      fill="white"
      fontSize={14}
      textAnchor={x > cx ? "start" : "end"}
      dominantBaseline="central"
    >
      {`${(percent * 100).toFixed(0)}%`}
    </text>
  );
};

const PiechartSales = () => {
  return (
    <div className="w-[20%] h-[20%] mt-4 ml-4 bg-white rounded-lg shadow-md p-3 ">
      <h1 className="mt-3 pl-3 font-regular text-xl">Sales Distribution</h1>
      <ResponsiveContainer width="100%" height="100%">
        <PieChart width={400} height={400}>
          <Pie
            data={data}
            cx="50%"
            cy="50%"
            labelLine={false}
            label={renderCustomizedLabel}
            outerRadius={100}
            fill="#8884d8"
            dataKey="sales"
          >
            {data.map((entry, index) => (
              <Cell
                key={`cell-${index}`}
                fill={COLORS[index % COLORS.length]}
              />
            ))}
          </Pie>
        </PieChart>
      </ResponsiveContainer>
    </div>
  );
};

export default PiechartSales;

<DataTable
  value={customers}
  paginator
  rows={5}
  rowsPerPageOptions={[5, 10, 25, 50]}
  tableStyle={{ minWidth: "50rem" }}
  paginatorTemplate="RowsPerPageDropdown FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink"
  currentPageReportTemplate="{first} to {last} of {totalRecords}"
  paginatorLeft={paginatorLeft}
  paginatorRight={paginatorRight}
  className="space-y-6"
>
  <Column
    field="orderId"
    header="Order ID"
    style={{
      width: "20%",
      padding: "10px",
      border: "1px solid black",
    }}
  ></Column>
  <Column
    field="customerName"
    header="Name"
    style={{
      width: "20%",
      padding: "10px",
      border: "1px solid black",
    }}
  ></Column>
  <Column
    field="product"
    header="Product"
    style={{
      width: "20%",
      padding: "10px",
      border: "1px solid black",
    }}
  ></Column>
  <Column
    field="amount"
    header="Amount"
    style={{
      width: "20%",
      padding: "10px",
      border: "1px solid black",
    }}
  ></Column>
  <Column
    field="date"
    header="Date"
    style={{
      width: "20%",
      padding: "10px",
      border: "1px solid black",
    }}
  ></Column>
</DataTable>;
